{"version":3,"sources":["../../src/api/lib/index.js"],"names":["port","apiPort","loginStart","req","res","sess","session","body","username","password","post","url","getServerUrl","JSON","stringify","phone","header","err","httpResponse","result","parse","code","token","data","access_token","userId","id","expire","Date","json","reloadResponse","InitFetch","met","vali","method","validator","tryToken","initData","realToken","toLowerCase","Object","assign","headers","response","console","log","mothod","pipe","downLoadUrl","type","server","serverPort","loadAuth","next","loginStatus","msg","setHeader","listen","error","info","funcs","getGoodsList","getOrderList","getCashierList","getShopList","initFetch","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["import config from \"../utils/configs\";\r\nimport fetchRequest from \"../utils/request\";\r\nimport date from \"../utils/date\";\r\nimport request from \"request\";\r\nimport co from 'co';\r\n\r\nvar port = config.apiPort;\r\n\r\n/**\r\n * 请求登录接口\r\n * @param {请求内容} req \r\n * @param {返回内容} res \r\n */\r\nfunction loginStart(req, res) {\r\n    let sess = req.session;\r\n    let { username, password } = req.body;\r\n    if (username && password) {\r\n        request.post({\r\n            url: config.getServerUrl('login'),\r\n            body: JSON.stringify({\r\n                phone: username,\r\n                password: password\r\n            }),\r\n            header: {\r\n                \"Content-type\": \"application/json;charset=UTF-8\"\r\n            }\r\n        }, function(err, httpResponse, body) {\r\n            let result = JSON.parse(body);\r\n            if (result.code == \"200\") {\r\n                sess.username = username;\r\n                sess.password = password;\r\n                sess.token = result.data.access_token;\r\n                sess.userId = result.data.id;\r\n                sess.expire = Date.parse(new Date()) / 1000 + 10;\r\n                res.json(result);\r\n            }\r\n        });\r\n    } else {\r\n        res.json(config.reloadResponse);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 接口quest方法获取封装，一次callback\r\n * @param {*请求参数} req \r\n * @param {*请求参数} res \r\n */\r\nconst InitFetch = function(met,url,vali) {\r\n        const method = met;\r\n        const validator = (typeof vali !== \"undefined\" || vali != null)?vali:null;\r\n        const tryToken = function(req) {\r\n            var sess = req.session;\r\n            var { username, password, token, expire } = sess;\r\n            if (username && password && token && expire) {\r\n                if (expire > Date.parse(new Date()) / 1000) {\r\n                    return token;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n        return function(req,res,initData){\r\n            co(function*(){\r\n            var realToken = tryToken(req);\r\n            var sess = req.session;\r\n            if (!realToken) {\r\n                var result = yield fetchRequest(config.getServerUrl('login'), {\r\n                    body: JSON.stringify({\r\n                        phone: req.session.username,\r\n                        password: req.session.password\r\n                    }),\r\n                    method: 'POST',\r\n                    header: {\r\n                        \"Content-type\": \"application/json;charset=UTF-8\"\r\n                    }\r\n                });\r\n                if (result.data.code == \"200\") {\r\n                    sess.token = result.data.data.access_token;\r\n                    sess.userId = result.data.data.id;\r\n                    sess.expire = Date.parse(new Date()) / 1000 + 10;\r\n                    realToken = sess.token;\r\n                }\r\n            }\r\n            if(method.toLowerCase() == \"post\"){\r\n                request.post(Object.assign({body:JSON.stringify(initData)},{\r\n                    headers: {\r\n                        \"Content-type\": \"application/json\",\r\n                        \"authorization\": realToken\r\n                    },\r\n                    url: url\r\n                }),function(err,response,body){\r\n                    let result = JSON.parse(body);\r\n                    if(result.code == \"200\"){\r\n                        if(validator){\r\n                            validator(result,req,res);\r\n                        }else{\r\n                            res.json(result);\r\n                        }\r\n                    }else{\r\n                        res.json(config.reloadResponse);\r\n                    }\r\n                });\r\n            }else{\r\n                console.log(url);\r\n                request({\r\n                    mothod: \"GET\",\r\n                    url: url,\r\n                    headers:{\r\n                        \"authorization\": realToken\r\n                    }\r\n                }).pipe(res);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 接口二次封装。第二个callback\r\n * @param {*接口类型} type \r\n */\r\nfunction downLoadUrl(type){\r\n    return InitFetch(\"post\",config.getServerUrl(type),function(result,req,res){\r\n        var data = result;\r\n        req.session[type]=data.data.url;\r\n        data.data.url=config.server+\":\"+config.serverPort+\"/api/file/\"+type;\r\n        console.log(req.session[type]);\r\n        res.json(data);\r\n    });\r\n}\r\n\r\n/**\r\n * 加载认证\r\n * @param {*处理请求} req \r\n * @param {*处理返回数据} res \r\n * @param {*} next \r\n */\r\nfunction loadAuth(req, res, next) {\r\n    let loginStatus = (typeof req.session.username === \"undefined\" || typeof req.session.password === \"undefined\") ? false : true;\r\n    if (loginStatus) {\r\n        let result = {\r\n            code: '1',\r\n            username: req.session.username,\r\n            msg: 'login auth OK!'\r\n        };\r\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        res.setHeader(\"Content-Type\", \"application/json\");\r\n        res.json(result);\r\n    } else {\r\n        let result = {\r\n            code: '0',\r\n            username: \"steven?\",\r\n            msg: 'no auth!'\r\n        };\r\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        res.setHeader(\"Content-Type\", \"application/json\");\r\n        res.json(result);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 监听端口号\r\n * @param {错误} error \r\n */\r\nfunction listen(error) {\r\n    if (error) {\r\n        console.error(error)\r\n    } else {\r\n        console.info(\"==> 🌎  API listening on port %s.\", port, port)\r\n    }\r\n}\r\n\r\n/**\r\n * export整合\r\n */\r\nconst funcs = {\r\n    getGoodsList: downLoadUrl(\"goods\"),\r\n    getOrderList: downLoadUrl(\"orders\"),\r\n    getCashierList: downLoadUrl(\"cashiers\"),\r\n    loginStart: loginStart,\r\n    getShopList: InitFetch(\"post\",config.getServerUrl(\"stores\")),\r\n    initFetch: InitFetch,\r\n    loadAuth: loadAuth,\r\n    listen: listen\r\n};\r\n\r\nmodule.exports = funcs;"]}