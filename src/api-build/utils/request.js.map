{"version":3,"sources":["../../api/utils/request.js"],"names":["request","parseJSON","response","json","checkStatus","status","error","Error","statusText","url","options","then","data","catch","err"],"mappings":";;;;;kBAuBwBA,O;;AAvBxB;;;;;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,SAAOA,SAASC,IAAT,EAAP;AACD;;AAED,SAASC,WAAT,CAAqBF,QAArB,EAA+B;AAC7B,MAAIA,SAASG,MAAT,IAAmB,GAAnB,IAA0BH,SAASG,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOH,QAAP;AACD;;AAED,MAAMI,QAAQ,IAAIC,KAAJ,CAAUL,SAASM,UAAnB,CAAd;AACAF,QAAMJ,QAAN,GAAiBA,QAAjB;AACA,QAAMI,KAAN;AACD;;AAED;;;;;;;AAOe,SAASN,OAAT,CAAiBS,GAAjB,EAAsBC,OAAtB,EAA+B;AAC5C,SAAO,qBAAMD,GAAN,EAAWC,OAAX,EACJC,IADI,CACCP,WADD,EAEJO,IAFI,CAECV,SAFD,EAGJU,IAHI,CAGC;AAAA,WAAS,EAAEC,UAAF,EAAT;AAAA,GAHD,EAIJC,KAJI,CAIE;AAAA,WAAQ,EAAEC,QAAF,EAAR;AAAA,GAJF,CAAP;AAKD","file":"request.js","sourcesContent":["import fetch from 'dva/fetch';\r\n\r\nfunction parseJSON(response) {\r\n  return response.json();\r\n}\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n\r\n  const error = new Error(response.statusText);\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nexport default function request(url, options) {\r\n  return fetch(url, options)\r\n    .then(checkStatus)\r\n    .then(parseJSON)\r\n    .then(data => ({ data }))\r\n    .catch(err => ({ err}));\r\n}\r\n"]}